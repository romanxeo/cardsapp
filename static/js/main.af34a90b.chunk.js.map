{"version":3,"sources":["common/c1-SuperInputText/SuperInputText.module.css","common/c2-SuperButton/SuperButton.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/Error404/Error404.tsx","pages/LogIn/LogIn.tsx","pages/Profile/Profile.tsx","pages/EnterNewPassword/EnterNewPassword.tsx","pages/RecoveryPassword/RecoveryPassword.tsx","pages/SignUp/SignUp.tsx","common/c1-SuperInputText/SuperInputText.tsx","common/c2-SuperButton/SuperButton.tsx","common/c3-SuperCheckbox/SuperCheckbox.tsx","pages/TestPage/TestPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Error404","LogIn","Profile","EnterNewPassword","RecoveryPassword","SignUp","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","TestPage","App","exact","path","render","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af34a90b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2saVJ\",\"superInput\":\"SuperInputText_superInput__2qbsd\",\"errorInput\":\"SuperInputText_errorInput__2xK0c\",\"error\":\"SuperInputText_error__19wmK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3A1DQ\",\"red\":\"SuperButton_red__3Gkcc\",\"button\":\"SuperButton_button__1I5iB\",\"blink\":\"SuperButton_blink__jTkbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3ji9c\",\"checkBox\":\"SuperCheckbox_checkBox__1Cfg0\",\"spanClassName\":\"SuperCheckbox_spanClassName__2XyV5\"};","import React from 'react';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            Error404\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404","import React from 'react';\r\n\r\nfunction LogIn() {\r\n    return (\r\n        <div>\r\n            LogIn\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn","import React from 'react';\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\n\r\nfunction EnterNewPassword() {\r\n    return (\r\n        <div>\r\n            EnterNewPassword\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterNewPassword","import React from 'react';\r\n\r\nfunction RecoveryPassword() {\r\n    return (\r\n        <div>\r\n            RecoveryPassword\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecoveryPassword","import React from 'react';\r\n\r\nfunction SignUp() {\r\n    return (\r\n        <div>\r\n            SignUp\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${s.className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from 'react';\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction TestPage() {\r\n    return (\r\n        <div>\r\n            TestPage\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                default\r\n            </SuperButton>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestPage","import React from 'react';\nimport {Redirect, Route, Switch } from 'react-router-dom';\n/*import s from './App.module.css';*/\nimport Error404 from './pages/Error404/Error404';\nimport LogIn from './pages/LogIn/LogIn';\nimport Profile from \"./pages/Profile/Profile\";\nimport EnterNewPassword from \"./pages/EnterNewPassword/EnterNewPassword\";\nimport RecoveryPassword from \"./pages/RecoveryPassword/RecoveryPassword\";\nimport SignUp from './pages/SignUp/SignUp';\nimport TestPage from './pages/TestPage/TestPage';\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n\n            <Switch>\n                <Route exact path={'/'} render={() => <TestPage/>}/>\n                <Route path={'/EnterNewPassword'} render={() => <EnterNewPassword/>}/>\n                <Route path={'/Error404'} render={() => <Error404/>}/>\n                <Route path={'/LogIn'} render={() => <LogIn/>}/>\n                <Route path={'/Profile'} render={() => <Profile/>}/>\n                <Route path={'/RecoveryPassword'} render={() => <RecoveryPassword/>}/>\n                <Route path={'/SignUp'} render={() => <SignUp/>}/>\n                <Redirect from={'*'} to={'/error404'}/>\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}